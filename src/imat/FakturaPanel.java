/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FakturaPanel.java
 *
 * Created on 2012-feb-28, 22:38:44
 */
package imat;

import se.chalmers.ait.dat215.project.Customer;
import se.chalmers.ait.dat215.project.IMatDataHandler;

/**
 *
 * @author lisastenberg
 */
public class FakturaPanel extends javax.swing.JPanel {
    IMatDataHandler dh = IMatDataHandler.getInstance();
    Customer customer = dh.getCustomer();
    
    /** Creates new form FakturaPanel */
    public FakturaPanel() {
        initComponents();
        
        firstNameField.setText(customer.getFirstName());
        lastNameField.setText(customer.getLastName());
        adressField.setText(customer.getAddress());
        postCodeField.setText(customer.getPostCode());
        cityField.setText(customer.getPostAddress());
        setFields(false);
    }
    
    public void setFields(boolean b) {
        firstNameField.setEnabled(b);
        lastNameField.setEnabled(b);
        adressField.setEnabled(b);
        postCodeField.setEnabled(b);
        cityField.setEnabled(b);
    }
    
    public boolean setInfo() {
        clearErrorArea();
        
        boolean fErr = false, lErr = false, aErr = false, pErr = false, cErr = false;
        String fMess ="", lMess = "", aMess = "", pMess ="", cMess = "";
        
        if(firstNameField.getText().length() == 0) {
            fErr = true;
            fMess = "Du måste fylla i förnamn";
        } 
        
        if(lastNameField.getText().length() == 0) {
            lErr = true;
            lMess = "Du måste fylla i efternamn";
        }
        
        if(adressField.getText().length() == 0) {
            aErr = true;
            aMess = "Du måste fylla i din adress";
        }
        
        if(postCodeField.getText().length() == 0) {
            pErr = true;
            pMess = "Du måste fylla i postnummer";
        }
        
        if(cityField.getText().length() == 0) {
            cErr = true;
            cMess = "Du måste fylla i stad";
        }
        String errorMessages = "";
        
        if(fErr) {
            errorMessages += fMess + "\n";
        }
        if(lErr) {
            errorMessages += lMess + "\n";
        }
        if(aErr) {
            errorMessages += aMess + "\n";
        }
        if(pErr) {
            errorMessages += pMess + "\n";
        }
        if(cErr) {
            errorMessages += cMess + "\n";
        }
        
        if(fErr || lErr || aErr || pErr || cErr) {
            errorArea.setText(errorMessages);
            return false;
        } else {
            return true;
        }
    }
    
    public void clearErrorArea() {
        errorArea.setText("");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        adressLabel = new javax.swing.JLabel();
        postAdressLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        adressField = new javax.swing.JTextField();
        postCodeField = new javax.swing.JTextField();
        cityField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        errorArea = new javax.swing.JTextArea();
        checkBox = new javax.swing.JCheckBox();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(imat.IMatApp.class).getContext().getResourceMap(FakturaPanel.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(429, 301));

        firstNameLabel.setFont(resourceMap.getFont("postAdressLabel.font")); // NOI18N
        firstNameLabel.setText(resourceMap.getString("firstNameLabel.text")); // NOI18N
        firstNameLabel.setName("firstNameLabel"); // NOI18N

        lastNameLabel.setFont(resourceMap.getFont("postAdressLabel.font")); // NOI18N
        lastNameLabel.setText(resourceMap.getString("lastNameLabel.text")); // NOI18N
        lastNameLabel.setName("lastNameLabel"); // NOI18N

        adressLabel.setFont(resourceMap.getFont("postAdressLabel.font")); // NOI18N
        adressLabel.setText(resourceMap.getString("adressLabel.text")); // NOI18N
        adressLabel.setName("adressLabel"); // NOI18N

        postAdressLabel.setFont(resourceMap.getFont("postAdressLabel.font")); // NOI18N
        postAdressLabel.setText(resourceMap.getString("postAdressLabel.text")); // NOI18N
        postAdressLabel.setName("postAdressLabel"); // NOI18N

        firstNameField.setText(resourceMap.getString("firstNameField.text")); // NOI18N
        firstNameField.setName("firstNameField"); // NOI18N

        lastNameField.setText(resourceMap.getString("lastNameField.text")); // NOI18N
        lastNameField.setName("lastNameField"); // NOI18N

        adressField.setFont(resourceMap.getFont("adressField.font")); // NOI18N
        adressField.setText(resourceMap.getString("adressField.text")); // NOI18N
        adressField.setName("adressField"); // NOI18N

        postCodeField.setText(resourceMap.getString("postCodeField.text")); // NOI18N
        postCodeField.setName("postCodeField"); // NOI18N

        cityField.setText(resourceMap.getString("cityField.text")); // NOI18N
        cityField.setName("cityField"); // NOI18N
        cityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityFieldActionPerformed(evt);
            }
        });

        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setBackground(resourceMap.getColor("jScrollPane1.background")); // NOI18N
        jScrollPane1.setBorder(null);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        errorArea.setBackground(resourceMap.getColor("errorArea.background")); // NOI18N
        errorArea.setColumns(20);
        errorArea.setFont(resourceMap.getFont("errorArea.font")); // NOI18N
        errorArea.setForeground(resourceMap.getColor("errorArea.foreground")); // NOI18N
        errorArea.setRows(5);
        errorArea.setName("errorArea"); // NOI18N
        jScrollPane1.setViewportView(errorArea);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
        );

        checkBox.setFont(resourceMap.getFont("checkBox.font")); // NOI18N
        checkBox.setSelected(true);
        checkBox.setText(resourceMap.getString("checkBox.text")); // NOI18N
        checkBox.setName("checkBox"); // NOI18N
        checkBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lastNameLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, adressLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, firstNameLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, postAdressLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(checkBox)
                        .addContainerGap())
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(firstNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .add(lastNameField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .add(adressField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .add(layout.createSequentialGroup()
                                    .add(postCodeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(cityField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                            .add(125, 125, 125)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(firstNameLabel)
                    .add(firstNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lastNameLabel)
                    .add(lastNameField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(adressLabel)
                    .add(adressField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(postAdressLabel)
                    .add(postCodeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cityField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(checkBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 11, Short.MAX_VALUE)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void cityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_cityFieldActionPerformed

private void checkBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxActionPerformed
    if(checkBox.isSelected()) {
        setFields(false);
    } else {
        setFields(true);
    }
}//GEN-LAST:event_checkBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adressField;
    private javax.swing.JLabel adressLabel;
    private javax.swing.JCheckBox checkBox;
    private javax.swing.JTextField cityField;
    private javax.swing.JTextArea errorArea;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel postAdressLabel;
    private javax.swing.JTextField postCodeField;
    // End of variables declaration//GEN-END:variables
}
